# Function to get input from the user and ensure it's between 1 and 10
get_valid_input <- function(prompt_text) {
repeat {
value <- as.integer(readline(prompt_text))
if (!is.na(value) && value >= 1 && value <= 10) {
return(value)
} else {
cat("Invalid input. Please enter a value between 1 and 10.\n")
}
}
}
# Get user input for each factor
margin <- get_valid_input("Enter margin score (1-10): ")
# Number of stores and clubs worldwide
X <- 10500
# Total customers per week
Y <- 230 * 10^6
# Average number of customers per store per week
average <- round(Y / X)
# Define categories based on average number of customers per store per week
if(average > 5000) {
print(paste("High Traffic Stores:", average, "customers per store per week"))
} else if(average >= 2000 && average <= 5000) {
print(paste("Moderate Traffic Stores:", average, "customers per store per week"))
} else {
print(paste("Low Traffic Stores:", average, "customers per store per week"))
}
estimate_member_number <- function(year) {
starting_year <- 2011
current_year <- 2021
starting_member <- 4 * 10^6
current_member <- 200 * 10^6
# Calculate the growth rate
growth_rate <- (current_member - starting_member) / (current_year - starting_year)
# Calculate the estimated number of members for the given year
estimated_member <- starting_member + growth_rate * (year - starting_year)
return(estimated_member)
}
target_year <- 2018
cat("Estimated Amazon Prime membership in", target_year, "is", estimate_member_number(target_year)
, "members\n")
estimate_member_number <- function(year) {
starting_year <- 2011
current_year <- 2021
starting_member <- 4 * 10^6
current_member <- 200 * 10^6
get_valid_input <- function(prompt_text) {
repeat {
value <- as.integer(readline(prompt_text))
if (!is.na(value) && value >= 1 && value <= 10) {
return(value)
} else {
cat("Invalid input. Please enter a value between 1 and 10.\n")
}
}
}
# Get user input for each factor
margin <- get_valid_input("Enter margin score (1-10): ")
7
price_sensitivity <- get_valid_input("Enter price sensitivity score (1-10): ")
8
delivery_preferences <- get_valid_input("Enter delivery preferences score (1-10): ")
6
# Evaluate profitability classification and print detailed message
if (total_score > 25) {
print(paste("Total score is", total_score, "hence it is High Profitability"))
} else if (total_score >= 15 && total_score <= 25) {
print(paste("Total score is", total_score, "hence it is Moderate Profitability"))
} else {
print(paste("Total score is", total_score, "hence it is Low Profitability"))
}
# Function to get input from the user and ensure it's between 1 and 10
get_valid_input <- function(prompt_text) {
repeat {
value <- as.integer(readline(prompt_text))
if (!is.na(value) && value >= 1 && value <= 10) {
return(value)
} else {
cat("Invalid input. Please enter a value between 1 and 10.\n")
}
}
}
# Get user input for each factor
margin <- get_valid_input("Enter margin score (1-10): ")
price_sensitivity <- get_valid_input("Enter price sensitivity score (1-10): ")
delivery_preferences <- get_valid_input("Enter delivery preferences score (1-10): ")
# Calculate total score
total_score <- margin + price_sensitivity + delivery_preferences
# Evaluate profitability classification and print detailed message
if (total_score > 25) {
print(paste("Total score is", total_score, "hence it is High Profitability"))
} else if (total_score >= 15 && total_score <= 25) {
print(paste("Total score is", total_score, "hence it is Moderate Profitability"))
} else {
print(paste("Total score is", total_score, "hence it is Low Profitability"))
}
